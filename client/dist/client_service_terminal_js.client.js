"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcoding_ars_client"] = self["webpackChunkcoding_ars_client"] || []).push([["client_service_terminal_js"],{

/***/ "./client/service/terminal.js":
/*!************************************!*\
  !*** ./client/service/terminal.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TerminalService: () => (/* binding */ TerminalService)\n/* harmony export */ });\n/* harmony import */ var _xterm_addon_fit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @xterm/addon-fit */ \"./node_modules/@xterm/addon-fit/lib/addon-fit.js\");\n/* harmony import */ var _xterm_addon_fit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_xterm_addon_fit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _xterm_xterm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @xterm/xterm */ \"./node_modules/@xterm/xterm/lib/xterm.js\");\n/* harmony import */ var _xterm_xterm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_xterm_xterm__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nclass TerminalService {\n  constructor(url, { task, target, language }) {\n    console.log(\"create terminal service\", url, task, target, language);\n\n    this.url = url;\n    this.socket = null;\n    this.term = null;\n    this.fitAddon = null;\n    this.resizeObserver = null;\n\n    this.inputBuffer = \"\";\n    this.cursorPos = 0;\n    this.history = [];\n    this.historyIndex = -1;\n    this.prompt = \"\\x1b[36m> \\x1b[0m\";\n\n    this._init(target);\n    this._connectWebSocket();\n  }\n\n  _init(target) {\n    this.term = new _xterm_xterm__WEBPACK_IMPORTED_MODULE_1__.Terminal({\n      cursorBlink: true,\n      fontSize: 14,\n      fontFamily: \"monospace\",\n      scrollback: 1000,\n      theme: {\n        background: \"#1D1D1D\",\n        foreground: \"#f1f1f1\",\n      },\n    });\n\n    this.fitAddon = new _xterm_addon_fit__WEBPACK_IMPORTED_MODULE_0__.FitAddon();\n    this.term.loadAddon(this.fitAddon);\n    this.term.open(target);\n    this.term.focus();\n    this.fitAddon.fit();\n\n    window.addEventListener(\"resize\", this._handleResize.bind(this));\n    this._observeTerminal(target);\n\n    this._showPrompt();\n    this.term.onData(this._handleInput.bind(this));\n  }\n\n  _connectWebSocket() {\n    return new Promise((resolve, reject) => {\n      if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n        return resolve();\n      }\n\n      const wsUrl = this.url.replace(/^http/, \"ws\") + \"/ws/run\";\n      this.socket = new WebSocket(wsUrl);\n\n      this.socket.onopen = () => {\n        resolve();\n      };\n\n      this.socket.onerror = (err) => {\n        reject(err);\n      };\n\n      this.socket.onmessage = (event) => {\n        this._handleMessage(event);\n      };\n    });\n  }\n\n  _closeWebSocket() {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n    }\n  }\n\n  _observeTerminal(target) {\n    this.resizeObserver = new ResizeObserver(() => {\n      this.fitAddon?.fit();\n    });\n    this.resizeObserver.observe(target);\n  }\n\n  _handleResize() {\n    if (this.fitAddon) {\n      this.fitAddon.fit();\n    }\n  }\n\n  _showPrompt() {\n    this.term.write(`\\r\\n${this.prompt}`);\n    this.cursorPos = 0;\n    this.inputBuffer = \"\";\n  }\n\n  _clearPromptLine() {\n    this.term.write(\"\\x1b[2K\\r\");\n    this.inputBuffer = \"\";\n    this.cursorPos = 0;\n  }\n\n  _handleInput(data) {\n    switch (data) {\n      case \"\\r\": // ENTER\n        if (this.inputBuffer.trim() === \"\") {\n          return;\n        }\n        this.term.write(\"\\r\\n\");\n        this._sendInput(this.inputBuffer + \"\\n\");\n\n        if (this.inputBuffer.trim()) {\n          this.history.unshift(this.inputBuffer);\n        }\n        this.historyIndex = -1;\n        this.inputBuffer = \"\";\n        this.cursorPos = 0;\n        break;\n\n      case \"\\u0003\": // STRG + C\n        this.term.write(\"^C\");\n        this.inputBuffer = \"\";\n        this.cursorPos = 0;\n        this._showPrompt();\n        break;\n\n      case \"\\u007f\": // BACKSPACE\n        if (this.cursorPos > 0) {\n          this.inputBuffer =\n            this.inputBuffer.slice(0, this.cursorPos - 1) +\n            this.inputBuffer.slice(this.cursorPos);\n          this.cursorPos--;\n          this._redrawInput();\n        }\n        break;\n\n      case \"\\u001b[A\": // UP\n        if (\n          this.history.length > 0 &&\n          this.historyIndex < this.history.length - 1\n        ) {\n          this.historyIndex++;\n          this._replaceInput(this.history[this.historyIndex]);\n        }\n        break;\n\n      case \"\\u001b[B\": // DOWN\n        if (this.historyIndex > 0) {\n          this.historyIndex--;\n          this._replaceInput(this.history[this.historyIndex]);\n        } else {\n          this.historyIndex = -1;\n          this._replaceInput(\"\");\n        }\n        break;\n\n      case \"\\u001b[D\": // LEFT\n        if (this.cursorPos > 0) {\n          this.term.write(\"\\x1b[D\");\n          this.cursorPos--;\n        }\n        break;\n\n      case \"\\u001b[C\": // RIGHT\n        if (this.cursorPos < this.inputBuffer.length) {\n          this.term.write(\"\\x1b[C\");\n          this.cursorPos++;\n        }\n        break;\n\n      default:\n        if (data >= \" \") {\n          this.inputBuffer =\n            this.inputBuffer.slice(0, this.cursorPos) +\n            data +\n            this.inputBuffer.slice(this.cursorPos);\n          this.cursorPos++;\n          this._redrawInput();\n        }\n        break;\n    }\n  }\n\n  _redrawInput() {\n    this.term.write(\"\\x1b[2K\\r\" + this.prompt + this.inputBuffer);\n    const absoluteCursor =\n      this.prompt.replace(/\\x1b\\[[0-9;]*m/g, \"\").length + this.cursorPos;\n    this.term.write(\"\\x1b[\" + (absoluteCursor + 1) + \"G\");\n  }\n\n  _replaceInput(newInput) {\n    this.inputBuffer = newInput;\n    this.cursorPos = newInput.length;\n    this._redrawInput();\n  }\n\n  _handleMessage(event) {\n    try {\n      const msg = JSON.parse(event.data);\n\n      switch (msg.type) {\n        case \"output/run\":\n          this.term.write(msg.data.replace(/\\n/g, \"\\r\\n\"));\n          this._showPrompt();\n          break;\n        case \"output/error\":\n          this._clearPromptLine();\n          this.term.write(`\\x1b[31m${msg.error.replace(/\\n/g, \"\\r\\n\")}\\x1b[0m`);\n          this._showPrompt();\n          break;\n      }\n\n      this.term.scrollToBottom();\n    } catch (err) {\n      this._clearPromptLine();\n      this.term.write(\n        \"\\r\\n\\x1b[31mFehler beim Parsen der Nachricht\\x1b[0m\\r\\n\"\n      );\n      this._showPrompt();\n    }\n  }\n\n  _sendInput(data) {\n    if (this.socket?.readyState === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify({ type: \"execute/shell\", stdin: data }));\n    }\n  }\n\n  clearTerminal() {\n    if (this.term) {\n      this.term.clear();\n      this.term.reset();\n    }\n  }\n\n  dispose() {\n    this._closeWebSocket();\n    if (this.term) {\n      this.term.dispose();\n      this.term = null;\n      this.fitAddon.dispose();\n      this.fitAddon = null;\n    }\n    window.removeEventListener(\"resize\", this._handleResize.bind(this));\n    this.resizeObserver?.disconnect();\n    this.resizeObserver = null;\n  }\n}\n\n//# sourceURL=webpack://coding-ars-client/./client/service/terminal.js?");

/***/ })

}]);